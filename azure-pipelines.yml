name: 'territory-conversion-api CasC'

trigger:
- master

stages:
- stage: Build
  displayName: Build

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        command: 'build'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish'
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish build artifact'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
      condition: succeededOrFailed()

- stage: Deploy
  displayName: Deploy to Dev

  jobs:
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: 'windows-2019'

    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'

    - task: FileTransform@2
      inputs:
        folderPath: '$(System.ArtifactsDirectory)/drop/*.zip'
        xmlTransformationRules: '' # There is a bug with this step that will say there was an error updating the file, even though the trasnform is successful. Putting in an empty string here fixes the issue.
        jsonTargetFiles: '**/appsettings.json'

    - task: DownloadSecureFile@1
      name: authkey
      displayName: 'Download Service Account Key'
      inputs:
        secureFile: 'google-service-account-key.json'
        retryCount: '2'

    - task: CmdLine@2
      inputs:
        script: gcloud auth activate-service-account --key-file $(authkey.secureFilePath)

    - task: CmdLine@2
      inputs:
        script: gcloud functions deploy territory-conversion-report --entry-point TerritoryConversionDashboard.Functions.ReportFunction --runtime dotnet3 --trigger-http --project=territory-conversion-dashboard 
    