name: 'territory-conversion-api CasC'

trigger:
- master

stages:
- stage: Build
  displayName: Build

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        command: 'build'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish'
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish build artifact'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
      condition: succeededOrFailed()

- stage: Deploy
  displayName: Deploy to Dev

  jobs:
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'

    - task: AzureRmWebAppDeployment@4
      displayName: Deploy to web app
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Pay-As-You-Go(2ad2ac6e-ab8f-4785-a81e-872b6abbb71f)'
        appType: 'webApp'
        WebAppName: 'tfdev-territory-conversion-api'
        packageForLinux: '$(System.ArtifactsDirectory)/drop/TerritoryConversionDashboard.zip'
        WebConfigParameters: '**/appsettings.json'

    